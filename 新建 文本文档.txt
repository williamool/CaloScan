CaloScan——饮食分析收银一体化系统
本项目旨在实现：
1. “菜品自动识别+称重”的全自动化收银系统
2. 同步的用户饮食记录（用户在支付时菜品信息会自动上传）
3. 基于协同过滤算法的饮食记录、个性化分析及智能推荐（微信小程序）
4. 面向食堂管理员的菜品信息管理后端

一、模型
模型训练及验证文件夹（不包含模型文件）

模型训练代码：
运行文件需要pytorch深度学习环境以及os等常见库
split_data.py: 将原始food2K数据集按类别划分为训练集和验证集（需修改数据集路径）
delete_ErrorImage.py: 删除food2K数据集中无法被打开的图像文件（需修改数据集路径）
data_mean_std: 计算数据集图像在RGB三个通道上的mean和std，用于标准化训练（需修改数据集路径）
model.py：ResNet模型文件，包含6个常用ResNet结构：ResNet-18，ResNet-34，ResNet50，ResNet-101，ResNeXt-50，ResNeXt-101（默认分类2000类）
train.py: 模型训练文件（默认采用Resnet50，200 epoch），并将模型保存为.pth文件（需修改数据集及模型保存路径，可修改预处理参数、训练参数以更快训练/更高精度），归一化参数由data_mean_std得到
class_indices.json: 生成文件，保存类别 ↔︎ 索引映射

模型验证代码：
banch_predict.py: 模型验证，返回对应类别与置信度（需修改模型路径及数据集路径）

其它代码：
permission_check.py: 检查是否有文件夹读写权限


获取菜品名称文件夹
get_str.py: 从文本文件中读取原始菜名，按序号0-1999保存为JSON-like文件（模型输出为数字类别，需要对应该文件以输出相应菜名）


pytorch_to_caffe_master文件夹
该文件夹为海思提供的Pytorch模型转Caffe模型的工具，我们仅需使用到：
pytorch_to_caffee.py: 模型转化核心文件，无需改动
resnet_pytorch_2_caffee.py: 将Pytorch模型（.pth）转换为Caffe可用的.prototxt（网络结构）和.caffemodel（权重）文件（需修改模型路径以及保存路径）


通过以上程序，你可以得到一个菜品识别的Caffe模型，接下来我们需要将该模型应用在海思AI芯片Hi3516上

首先，我们可以通过网站https://ethereon.github.io/netscope/#/editor提供的可视化工具查看自己的.prototxt网络结构是否正确
验证无误后，我们需要利用海思的RuyiStudio集成开发环境将Caffe模型转换成海思NNIE引擎可执行的.wk文件，这样整个系统的模型训练工作就结束了，后续还需要实际下板调试等，这里不再赘述


二、小程序开发
需搭配华为云与微信开发者工具使用
支持用户注册与登入，个人信息录入，充值
支持当日饮食状况查询，营养素分析，同时根据营养情况做个性化膳食推荐
成果展示：

三、云端开发
云端开发包括四个部分
华为云RDS：MySQL数据库引擎，用于储存用户信息，包括账号密码，身高体重等个人信息
华为云对象储存服务OBS：用于储存菜品信息，包括菜品名称，单位质量营养成分等
华为云ECS服务器：用于部署分析推荐算法，直接与微信小程序和Web端相交互
华为云IoTDA：接收Hi3861上报的信息（Hi3516识别到的菜品种类、重量，人脸识别系统得到的用户信息等），用于记录个性化饮食数据

四、Web端开发（代码缺失）
Web端开发主要用于向食堂管理员展示菜品销量信息，支持管理员实时修改菜品单价和菜品营养成分

五、Qt端开发（代码缺失）
用于菜品单价及总价展示，支持用户人脸支付







